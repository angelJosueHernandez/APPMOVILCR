name: Mobil CI/CD Workflow

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, closed]
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['20.x']

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-cache-${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-cache-${{ runner.os }}-node-${{ matrix.node-version }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Expo CLI
        run: npm install --global expo-cli

      - name: Install dependencies
        run: npm install

      - name: Run Tests
        run: npm test

      - name: Run ESLint
        run: npm run lint --if-present

      - name: Install EAS CLI
        run: npm install -g eas-cli

      - name: Build APK for Android
        if: github.ref == 'refs/heads/main'
        run: |
          # Exportar el token de Sentry para el proceso de subida de source maps
          export SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
          # Ejecutar el build
          npx eas-cli build --platform android --profile production --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

      - name: Upload source maps to Sentry
        run: |
          npx sentry-cli releases files "$RELEASE" upload-sourcemaps ./path/to/sourcemaps --rewrite --org "uthh-ql" --project "cruz-roja"
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          RELEASE: "1.0.0"

  build:
    runs-on: ubuntu-latest
    needs: build-and-upload
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install EAS CLI
        run: npm install -g eas-cli

      - name: Install dependencies
        run: npm install

      - name: Build APK for Android
        run: npx eas-cli build --platform android --profile preview --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Upload image and send data to API
        run: |
          # Obtener URL del artefacto
          RESPONSE=$(eas build:list --limit=1 --status=finished --json --non-interactive)
          DOWNLOAD_URL=$(echo "$RESPONSE" | jq -r '.[0].artifacts.buildUrl')

          echo "La URL del artefacto obtenida es: $DOWNLOAD_URL"

          # Verificar si la imagen existe
          if [ ! -f "$IMAGE_PATH" ]; then
            echo "La imagen no existe en la ruta especificada: $IMAGE_PATH"
            exit 1
          fi

          # Obtener solo el nombre del archivo desde la ruta completa
          IMAGE_NAME=$(basename "$IMAGE_PATH")
          echo "El nombre del icono es: $IMAGE_NAME"

          # Subir la imagen al servidor PHP
          curl -X POST \
            -F "imagen=@$IMAGE_PATH" \
            "$WEB_SERVICE_URL"

          # Enviar datos a la API de Express
          curl -X POST "$API_URL" \
            -H "Content-Type: application/json" \
            -d '{
              "url": "'"$DOWNLOAD_URL"'",
              "nombre": "'"$PROJECT_NAME"'",
              "icono": "'"$IMAGE_NAME"'"
            }'

        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
          IMAGE_PATH: ".github/workflows/Emergencia2.png"
          WEB_SERVICE_URL: "https://labarbada.store/subirImagen.php"
          API_URL: "https://api-admin-six.vercel.app/api/guardar-datos"
          PROJECT_NAME: "Cruz Roja Huejutla"

  notify_build:
    runs-on: ubuntu-latest
    needs: build-and-upload
    if: always()
    steps:
      - name: Enviar notificaci√≥n en caso de fallo
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.MAIL_SERVER }}
          server_port: ${{ secrets.MAIL_PORT }}
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: "üö® Fallo en la construcci√≥n de la aplicaci√≥n m√≥vil"
          body: |
            La construcci√≥n ha fallado en la rama: ${{ github.ref_name }}.
            **Detalles del fallo:**
            - **Commit:** ${{ github.event.head_commit.message }}
            - **Autor:** ${{ github.event.head_commit.author.name }}
            - **Hash del Commit:** ${{ github.sha }}
          to: "20210672@uthh.edu.mx"
          from: ${{ secrets.MAIL_USERNAME }}

      - name: Enviar notificaci√≥n en caso de √©xito
        if: success()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.MAIL_SERVER }}
          server_port: ${{ secrets.MAIL_PORT }}
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: "‚úÖ Construcci√≥n exitosa de la aplicaci√≥n m√≥vil"
          body: |
            La construcci√≥n ha sido completada exitosamente en la rama: ${{ github.ref_name }}.
            **Detalles de la construcci√≥n:**
            - **Commit:** ${{ github.event.head_commit.message }}
            - **Autor:** ${{ github.event.head_commit.author.name }}
            - **Hash del Commit:** ${{ github.sha }}
          to: "20210672@uthh.edu.mx"
          from: ${{ secrets.MAIL_USERNAME }}

  notify_pr_comment:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Add comment on PR
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { context } = require('@actions/github');
            github.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "üöÄ ¬°El Pull Request ha sido actualizado! Revisa los √∫ltimos cambios."
            })
