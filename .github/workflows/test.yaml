name: Mobil CI/CD Workflow

on:
  push:
    branches:
      - main  # Solo en la rama main
  pull_request:
    types: [opened, closed]  # Solo ejecuta al abrir o cerrar PR en main
    branches:
      - main
  workflow_dispatch:  # Permite ejecutar el flujo manualmente

jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['20.x']

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-cache-${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-cache-${{ runner.os }}-node-${{ matrix.node-version }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Expo CLI
        run: npm install --global expo-cli

      - name: Install dependencies
        run: npm install

      - name: Run Tests
        run: npm test  # Esto ejecutar√° las pruebas en modo CI sin --watchAll

      - name: Run ESLint
        run: npm run lint --if-present

      - name: Install EAS CLI
        run: npm install -g eas-cli

      - name: Build APK for Android
        if: github.ref == 'refs/heads/main'  # Ejecutar solo en la rama main
        run: eas build --platform android --profile production --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Install gdrive
        run: |
          # Actualizar y verificar espacio
          sudo apt-get update
          df -h /  # Esto mostrar√° el espacio libre en disco para verificar

          # Instalar wget si no est√° ya instalado
          sudo apt-get install -y wget

          # Descargar y descomprimir gdrive
          wget -O gdrive.tar.gz https://github.com/prasmussen/gdrive/releases/download/2.1.1/gdrive_2.1.1_linux_amd64.tar.gz
          tar -xzf gdrive.tar.gz
          chmod +x gdrive
          sudo mv gdrive /usr/local/bin/gdrive

      - name: Authenticate with Google Drive
        env:
          GDRIVE_CREDENTIALS_JSON: ${{ secrets.GDRIVE_CREDENTIALS_JSON }}
        run: |
          echo "$GDRIVE_CREDENTIALS_JSON" > credentials.json
          gdrive about -c credentials.json

      - name: Upload APK to Google Drive
        env:
          GDRIVE_CREDENTIALS_JSON: ${{ secrets.GDRIVE_CREDENTIALS_JSON }}
        run: |
          APK_PATH=$(find ./builds/android -name "*.apk" | head -n 1)
          gdrive upload --parent 1qyapLYsqsmbRO0RKxeECR0hnhNJSFAbG "$APK_PATH" -c credentials.json

  notify_build:
    runs-on: ubuntu-latest
    needs: build-and-upload
    if: always()  # Para asegurarse de enviar notificaciones tanto en caso de √©xito como de fallo
    steps:
      - name: Enviar notificaci√≥n en caso de fallo
        if: failure()  # Solo si falla
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.MAIL_SERVER }}
          server_port: ${{ secrets.MAIL_PORT }}
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: "üö® Fallo en la construcci√≥n de la aplicaci√≥n m√≥vil"
          body: |
            La construcci√≥n ha fallado en la rama: ${{ github.ref_name }}.
            **Detalles del fallo:**
            - **Commit:** ${{ github.event.head_commit.message }}
            - **Autor:** ${{ github.event.head_commit.author.name }}
            - **Hash del Commit:** ${{ github.sha }}
          to: "20210672@uthh.edu.mx"
          from: ${{ secrets.MAIL_USERNAME }}

      - name: Enviar notificaci√≥n en caso de √©xito
        if: success()  # Solo si es exitoso
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.MAIL_SERVER }}
          server_port: ${{ secrets.MAIL_PORT }}
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: "‚úÖ Construcci√≥n exitosa de la aplicaci√≥n m√≥vil"
          body: |
            La construcci√≥n ha sido completada exitosamente en la rama: ${{ github.ref_name }}.
            **Detalles de la construcci√≥n:**
            - **Commit:** ${{ github.event.head_commit.message }}
            - **Autor:** ${{ github.event.head_commit.author.name }}
            - **Hash del Commit:** ${{ github.sha }}
          to: "20210672@uthh.edu.mx"
          from: ${{ secrets.MAIL_USERNAME }}

  notify_pr_comment:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Add comment on PR
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { context } = require('@actions/github');
            github.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "üöÄ ¬°El Pull Request ha sido actualizado! Revisa los √∫ltimos cambios."
            })
